'use strict'

/**
 * Queue server setup along with necessary Adonis components
 * 
 * @version 1.0.0
 * @adonis-version 3.2
 */

const app = require('./app')
const fold = require('adonis-fold')
const path = require('path')
const packageFile = path.join(__dirname, '../package.json')
require('./extend')

module.exports = function (callback) {
  fold.Registrar
  .register(app.providers)
  .then(() => {
      /*
      |--------------------------------------------------------------------------
      | Register Aliases
      |--------------------------------------------------------------------------
      |
      | After registering all the providers, we need to setup aliases so that
      | providers can be referenced with short sweet names.
      |
      */
      fold.Ioc.aliases(app.aliases)

      /*
      |--------------------------------------------------------------------------
      | Register Package File
      |--------------------------------------------------------------------------
      |
      | Adonis application package.json file has the reference to the autoload
      | directory. Here we register the package file with the Helpers provider
      | to setup autoloading.
      |
      */
      const Helpers = use('Helpers')
      const Env = use('Env')
      Helpers.load(packageFile, fold.Ioc)

      /*
      |--------------------------------------------------------------------------
      | Register Events
      |--------------------------------------------------------------------------
      |
      | Here we require the event.js file to register events defined inside
      | events.js file.
      |
      */
      require('./events')

      /*
      |--------------------------------------------------------------------------
      | Register all job listeners
      |--------------------------------------------------------------------------
      |
      | Here we fire up our queue listener, and it automatically searches for all
      | available jobs on the systems and boot up queue workers.
      |
      */
      const Queue = use('Queue');

      Queue.listen().then(
          success => { console.log(success.message) }, 
          error => { console.log(error.message) }
        );


  })
  .catch((error) => console.error(error.stack))
}
